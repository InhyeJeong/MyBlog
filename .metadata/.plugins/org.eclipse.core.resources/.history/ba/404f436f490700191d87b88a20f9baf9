package edu.iot.common.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Isolation;
import org.springframework.transaction.annotation.Transactional;

import edu.iot.common.dao.GalleryDao;
import edu.iot.common.model.Gallery;
import edu.iot.common.model.GalleryImage;
import edu.iot.common.model.Pagination;
import lombok.extern.slf4j.Slf4j;

/** 구현 클래스 순서 */
// @Service 어노테이션
// dao에 대한 참조변수 @Autowired
@Service
@Slf4j
public class GalleryServiceImpl implements GalleryService {

	@Autowired
	GalleryDao dao;

	@Override
	public Map<String, Object> getPage(int page, String orderBy) throws Exception {
		Map<String, Object> map = new HashMap<>();
		
		/** pagination 모델 클래스에서 이미 정의해둠 */
		int total = dao.count();
		Pagination pagination = new Pagination(page, total);
		map.put("pagination", pagination);
		map.put("orderBy", orderBy);
		
		Map<String, Object> pageMap = pagination.getPageMap();
		pageMap.put("orderBy", orderBy);
		map.put("list", dao.getPage(pageMap));
		
		/**기존 getPage를 사용하는 경우 : join 사용안할 시, 루프를 돌린후 findById의 주석풀어서 직접 넣어주기*/
//		List<Gallery> list = dao.getPage(pagination.getPageMap());
//		for(Gallery g : list) {
//			List<GalleryImage> imageList =
//							dao.getImages(g.getGalleryId());
//			g.setList(imageList);
//		}
//		map.put("list", list);
		
		
		//map.put("list", dao.getPage(pagination.getPageMap()));

		

		return map;
	}

	@Override
	public void create(Gallery gallery) throws Exception {
		dao.insert(gallery);

	}

	@Override /**Gallery 목록 얻기*/
	public Gallery findById(long galleryId) throws Exception {
		// 갤러리 조회수 증가 : 앞에서 호출 (갤러리를 얻을 때 내가 본 것도 조회수에 추가됨) 뒤에서(내가보는것은 반영되지 않음)
		dao.increaseReadCnt(galleryId);
		
		Gallery gallery = dao.findById(galleryId);
		/*** 갤러리 목록 얻기*/	
			// join 사용 안한 방법은(정규식) 쿼리2번 : Gallery list (레코드1개 처음의 list는 null)
			// join 사용하면 view로 (이미지 갯수만큼 레코드가 나온다. 1개의 갤러리에 다수의 이미지가 담기도록 mapping관계를 알리려는 것이 resultMap! resultMap에 다수의 이미지가 담김)
		//List<GalleryImage> list = dao.getImages(galleryId);
		
		/**설정*/
		//gallery.setList(list);
		
		/**이미지 목록을 포함하는 갤러리 리턴!!!!!!!!!*/
		return gallery;
	}

	@Override
	public void update(Gallery gallery) throws Exception {
		dao.update(gallery);

	}

	@Override
	public void addImage(GalleryImage image) throws Exception {
		dao.addImages(image);

	}

	@Override
	public GalleryImage getImage(long imageId) throws Exception {
		return dao.getImage(imageId);
	}
	
	
}
